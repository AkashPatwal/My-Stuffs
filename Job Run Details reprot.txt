set nocount on
go
use msdb
go
declare @num_days int
declare @first_day datetime
	,@last_day datetime
declare @first_num int

if @num_days is null
	set @num_days=30

set @last_day = getdate()
set @first_day = dateadd(dd, -@num_days, @last_day)

select @first_num= cast(year(@first_day) as char(4))
	+replicate('0',2-len(month(@first_day)))+ cast(month(@first_day) as varchar(2))
	+replicate('0',2-len(day(@first_day)))+ cast(day(@first_day) as varchar(2))

SELECT 
h.instance_id,
h.job_id,
j.name,
h.step_id,
h.step_name,  		--extra
h.sql_message_id,	--extra
h.sql_severity,		--extra
h.run_status,		--extra
'run_date'= cast(h.run_date as varchar(8)),		
'run_time'= replicate('0',6-len(h.run_time))+cast(h.run_time as varchar(6)),
'run_datetime' = left(cast(h.run_date as varchar(8)),4)+'/'
		+substring(cast(h.run_date as varchar(8)),5,2)+'/'
		+right(cast(h.run_date as varchar(8)),2)+' '
		+left(replicate('0',6-len(h.run_time))+cast(h.run_time as varchar(6)),2)+':'
		+substring(replicate('0',6-len(h.run_time))+cast(h.run_time as varchar(6)),3,2)+':'
		+right(replicate('0',6-len(h.run_time))+cast(h.run_time as varchar(6)),2),
run_duration = cast(h.run_duration as varchar(20)),
run_duration_conv = case 
	when (len(cast(h.run_duration as varchar(20))) < 3)  
		then cast(h.run_duration as varchar(6))
	WHEN (len(cast(h.run_duration as varchar(20))) = 3)  
		then LEFT(cast(h.run_duration as varchar(6)),1) * 60   --min
			+ RIGHT(cast(h.run_duration as varchar(6)),2)  --sec
	WHEN (len(cast(h.run_duration as varchar(20))) = 4)  
		then LEFT(cast(h.run_duration as varchar(6)),2) * 60   --min
			+ RIGHT(cast(h.run_duration as varchar(6)),2)  --sec
	WHEN (len(cast(h.run_duration as varchar(20))) >= 5)  
		then (Left(cast(h.run_duration as varchar(20)),len(h.run_duration)-4)) * 3600   		--hour
			+(substring(cast(h.run_duration as varchar(20)) , len(h.run_duration)-3, 2)) * 60	--min
			+ Right(cast(h.run_duration as varchar(20)) , 2)					--sec
	end,
h.retries_attempted,
h.server
into #temp_jobhistory
from msdb..sysjobhistory h 
inner join  msdb..sysjobs j on h.job_id=j.job_id 

where 	h.job_id=j.job_id 
	and h.run_date >= @first_num
	and h.step_id=0 and h.run_date >'20180906' and name not like 'syspolicy%'

select 	'Job Enabled' = CASE j.Enabled
		WHEN 1 THEN 'Yes'
		WHEN 0 THEN 'No'
	END,
	j.job_id
	,j.name
	,'Sampling'=(select count(*) from #temp_jobhistory h where h.job_id=j.job_id)
	,'fromRunDate' = (select min(run_date) from #temp_jobhistory h where h.job_id=j.job_id)
	,'run_duration_max'=(select max(run_duration_conv) from #temp_jobhistory h where h.job_id=j.job_id)
	,'run_duration_min'=(select min(run_duration_conv) from #temp_jobhistory h where h.job_id=j.job_id)
	,'run_duration_avg'=(select avg(run_duration_conv) from #temp_jobhistory h where h.job_id=j.job_id)
	,'Last_RunDate'=(select max(run_datetime) from #temp_jobhistory h where h.job_id=j.job_id)
	,'Last_RunStatus'= null --(select run_status from #temp_jobhistory h where h.job_id=j.job_id)
	,'Last_RunDuration'=null
into #temp_runhistory
	from msdb..sysjobs j
	where name not like 'syspolicy%'

update #temp_runhistory 
set Last_RunStatus = j.run_status
	,Last_RunDuration=j.run_duration_conv
from #temp_jobhistory j
where #temp_runhistory.job_id=j.job_id
	and #temp_runhistory.Last_RunDate=j.run_datetime
	and j.run_datetime=(select max(run_datetime) from #temp_jobhistory j1
				where j1.job_id=#temp_runhistory.job_id)

select @@servername InstanceName,name as 'Job Name',[Job Enabled] ,
	Last_RunDate,
		'Last_RunStatus'=case Last_RunStatus
				when 0 then 'Failed'
				when 1 then 'Succeeded'
				when 2 then 'Retry'
				when 3 then 'Canceled'
				when 4 then 'In progress'
			end,
	'Last_RunDuration'= cast(Last_RunDuration/3600 as varchar(10))
				+':'+replicate('0',2-len((Last_RunDuration % 3600)/60))+cast((Last_RunDuration % 3600)/60 as varchar(2))
				+':'+replicate('0',2-len((Last_RunDuration % 3600) %60))+cast((Last_RunDuration % 3600)%60 as varchar(2)),
	'Avg Duration (hh:mm:ss)' = cast(run_duration_avg/3600 as varchar(10))
				+':'+replicate('0',2-len((run_duration_avg % 3600)/60))+cast((run_duration_avg % 3600)/60 as varchar(2))
				+':'+replicate('0',2-len((run_duration_avg % 3600) %60))+cast((run_duration_avg % 3600)%60 as varchar(2)),
	'Max Duration (hh:mm:ss)' = cast(run_duration_max/3600 as varchar(10))
				+':'+replicate('0',2-len((run_duration_max % 3600)/60))+cast((run_duration_max % 3600)/60 as varchar(2))
				+':'+replicate('0',2-len((run_duration_max % 3600) %60))+cast((run_duration_max % 3600)%60 as varchar(2)),h.[Maxrun Datetime],
	'Min Duration (hh:mm:ss)' = cast(run_duration_min/3600 as varchar(10))
				+':'+replicate('0',2-len((run_duration_min % 3600)/60))+cast((run_duration_min % 3600)/60 as varchar(2))
				+':'+replicate('0',2-len((run_duration_min % 3600) %60))+cast((run_duration_min % 3600)%60 as varchar(2))
	--,fromRunDate as 'From Date'
	--,Sampling
 from #temp_runhistory t
 left outer  join(SELECT distinct h.job_id, 
'Maxrun Datetime' = left(cast(h.run_date as varchar(8)),4)+'/'
		+substring(cast(h.run_date as varchar(8)),5,2)+'/'
		+right(cast(h.run_date as varchar(8)),2)+' '
		+left(replicate('0',6-len(h.run_time))+cast(h.run_time as varchar(6)),2)+':'
		+substring(replicate('0',6-len(h.run_time))+cast(h.run_time as varchar(6)),3,2)+':'
		+right(replicate('0',6-len(h.run_time))+cast(h.run_time as varchar(6)),2)
		FROM dbo.sysjobhistory h 
		inner join (select job_id, max(run_duration) RD FROM dbo.sysjobhistory where run_date >'20180906' GROUP BY job_id) p
		on h.job_id =p.job_id 
		where h.run_duration=p.rd and  
		h.run_date >'20180906' ) h on t.job_id =h.job_id 
		
order by name

drop table #temp_runhistory
drop table #temp_jobhistory


